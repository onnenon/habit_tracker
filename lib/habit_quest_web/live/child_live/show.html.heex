<div class="w-full px-4">
  <.header>
    <div class="flex items-center gap-4">
      <%= if @child.avatar do %>
        <img src={@child.avatar} alt={@child.name} class="w-16 h-16 rounded-full object-cover"/>
      <% else %>
        <div class="w-16 h-16 rounded-full bg-zinc-200 flex items-center justify-center">
          <span class="text-zinc-500 text-2xl font-medium"><%= String.first(@child.name) %></span>
        </div>
      <% end %>
      <%= @child.name %>'s Dashboard
    </div>
    <:subtitle>
      <span class="text-3xl font-bold transition-all duration-300 transform" id="points" phx-hook="Points">
        Current Points: <%= @child.points %>
      </span>
    </:subtitle>
  </.header>

  <div class="mt-8">
    <div class="border-b border-gray-200">
      <nav class="-mb-px flex space-x-8" aria-label="Tabs">
        <button
          phx-click="change_tab"
          phx-value-tab="daily"
          class={[
            "py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap",
            if(@current_tab == "daily", do: "border-indigo-500 text-indigo-600", else: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300")
          ]}
        >
          Daily Tasks
        </button>
        <button
          phx-click="change_tab"
          phx-value-tab="punch_cards"
          class={[
            "py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap",
            if(@current_tab == "punch_cards", do: "border-indigo-500 text-indigo-600", else: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300")
          ]}
        >
          Punch Cards
        </button>
        <button
          phx-click="change_tab"
          phx-value-tab="other"
          class={[
            "py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap",
            if(@current_tab == "other", do: "border-indigo-500 text-indigo-600", else: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300")
          ]}
        >
          Other Tasks
        </button>
        <div class="flex-1"></div>
        <button
          phx-click="change_tab"
          phx-value-tab="rewards"
          class={[
            "py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap",
            if(@current_tab == "rewards", do: "border-indigo-500 text-indigo-600", else: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300")
          ]}
        >
          Rewards
        </button>
      </nav>
    </div>

    <div class="mt-6">
      <%= case @current_tab do %>
        <% "daily" -> %>
          <div class="grid grid-cols-7 xl:grid-cols-8">
            <%= for {day, index} <- Enum.with_index(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]) do %>
              <% date = Date.add(@current_week.start, index)
              is_today = Date.compare(date, Date.utc_today()) == :eq

              full_day =
                case day do
                  "Mon" -> "monday"
                  "Tue" -> "tuesday"
                  "Wed" -> "wednesday"
                  "Thu" -> "thursday"
                  "Fri" -> "friday"
                  "Sat" -> "saturday"
                  "Sun" -> "sunday"
                end %>
              <div class={[
                "min-h-[200px] bg-white rounded-lg shadow-md overflow-hidden transition-all",
                if(is_today, do: "xl:col-span-2 xl:row-span-2")
              ]}>
                <div class={[
                  "p-4 border-b border-gray-200",
                  if(is_today, do: "bg-orange-100", else: "bg-gray-50")
                ]}>
                  <h3 class={[
                    "font-semibold text-center text-gray-800",
                    if(is_today, do: "text-lg", else: "text-base")
                  ]}>
                    {day}
                    <div class="text-sm font-normal text-gray-500 mt-1">
                      {Calendar.strftime(date, "%b %d")}
                    </div>
                  </h3>
                </div>
                <div class="p-3 space-y-3 max-h-[500px] overflow-y-auto">
                  <%= for task <- Enum.filter(@tasks, fn task -> 
                    task.task_type == "weekly" && 
                    full_day in (task.schedule_days || [])
                  end) |> Enum.sort_by(&{-&1.points, &1.title}) do %>
                    <% 
                      task_completed = if Map.has_key?(@task_completions, task.id) do
                        completions = @task_completions[task.id]
                        date_str = if is_binary(date), do: date, else: Date.to_string(date)
                        Enum.any?(completions, fn completion_date -> 
                          comp_str = if is_binary(completion_date), do: completion_date, else: Date.to_string(completion_date)
                          comp_str == date_str
                        end)
                      else
                        false
                      end

                      is_future = Date.compare(date, Date.utc_today()) == :gt
                    %>
                    <div class={[
                      cond do
                        task_completed -> "bg-green-50 rounded-lg p-3 border border-green-100 transition-colors"
                        is_future -> "bg-gray-50/50 rounded-lg p-3 border border-gray-100 transition-colors opacity-95"
                        true -> "bg-gray-50 rounded-lg p-3 border border-gray-200 transition-colors"
                      end,
                      # Make clickable if either it can be completed OR if it's already completed (for toggling)
                      if can_complete_task?(task, @child, date) or task_completed do
                        "cursor-pointer hover:border-gray-300"
                      else
                        ""
                      end
                    ]}
                    phx-click={
                      cond do
                        task_completed -> "remove_task_completion"
                        can_complete_task?(task, @child, date) -> "complete_task"
                        true -> nil
                      end
                    }
                    phx-value-id={task.id}
                    phx-value-date={if is_binary(date), do: date, else: Date.to_string(date)}
                    >
                      <div class="flex justify-between items-start gap-2">
                        <div>
                          <h4 class={[
                            "font-medium",
                            cond do
                              task_completed -> "text-xs text-green-700"
                              is_future -> "text-xs text-gray-400"
                              true -> "text-xs text-gray-700"
                            end
                          ]}>
                            {task.title}
                          </h4>
                          <span class={[
                            "font-medium whitespace-nowrap text-xs",
                            cond do
                              task_completed -> "text-green-600"
                              is_future -> "text-gray-400"
                              true -> "text-gray-600"
                            end
                          ]}>
                            {task.points} pts
                          </span>
                        </div>

                        <%= if task_completed do %>
                          <div class="rounded-full flex items-center justify-center p-2 text-green-600">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 20 20"
                              fill="currentColor"
                              class="w-5 h-5"
                            >
                              <path
                                fill-rule="evenodd"
                                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                clip-rule="evenodd"
                              />
                            </svg>
                          </div>
                        <% else %>
                          <%= if can_complete_task?(task, @child, date) do %>
                            <div class="rounded-full flex items-center justify-center p-2 text-gray-500">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                viewBox="0 0 20 20"
                                fill="none"
                                stroke="currentColor"
                                class="w-5 h-5"
                              >
                                <rect x="3" y="3" width="14" height="14" rx="2" stroke-width="2" />
                              </svg>
                            </div>
                          <% end %>
                        <% end %>
                      </div>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>

        <% "punch_cards" -> %>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <%= for task <- Enum.filter(@tasks, & &1.task_type == "punch_card") do %>
              <div 
                class={[
                  "bg-white shadow rounded-lg p-4",
                  (if task.current_completions >= task.completions_required, do: "bg-green-50 border border-green-100", else: "")
                ]} 
                id={"punch-card-#{task.id}"} 
                data-completions-required={task.completions_required}
              >
                <div class="flex justify-between items-start mb-2">
                  <h3 class={[
                    "text-lg font-medium",
                    (if task.current_completions >= task.completions_required, do: "text-green-900", else: "")
                  ]}><%= task.title %></h3>
                  <span class={[
                    "text-sm font-medium",
                    (if task.current_completions >= task.completions_required, do: "text-green-600", else: "text-orange-600")
                  ]}><%= task.points %> pts</span>
                </div>
                <p class="text-sm text-gray-600 mb-2"><%= task.description %></p>
                <div class="flex items-center justify-between mb-4">
                  <div class="flex gap-2">
                    <%= for i <- 1..task.completions_required do %>
                      <div class={[
                        "punch-circle w-6 h-6 rounded-full flex items-center justify-center border-2 transition-all duration-200",
                        if i <= task.current_completions do
                          "border-red-400 bg-red-400 text-white"
                        else
                          "border-gray-300"
                        end
                      ]}>
                        <%= if i <= task.current_completions do %>
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                            class="w-4 h-4"
                          >
                            <path
                              fill-rule="evenodd"
                              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                              clip-rule="evenodd"
                            />
                          </svg>
                        <% else %>
                          <span class="w-2 h-2 rounded-full bg-gray-300"></span>
                        <% end %>
                      </div>
                    <% end %>
                  </div>
                  <div class="text-sm text-gray-500">
                    <% completion_count = Tasks.count_punch_card_completions(task.id, @child.id) %>
                    <%= if completion_count > 0 do %>
                      Completed <%= completion_count %> times!
                    <% else %>
                      Completed <%= completion_count %> times total
                    <% end %>
                  </div>
                </div>
                <%= if can_complete_task?(task, @child) do %>
                  <.button phx-click="complete_task" phx-value-id={task.id} class="w-full">
                    Complete
                  </.button>
                <% end %>
              </div>
            <% end %>
          </div>

        <% "other" -> %>
          <.table id="other-tasks" rows={Enum.filter(@tasks, &(&1.task_type == "one_off"))}>
            <:col :let={task} label="Title">{task.title}</:col>
            <:col :let={task} label="Description">{task.description}</:col>
            <:col :let={task} label="Points">{task.points} pts</:col>
            <:col :let={task} label="Status">
              <%= case task.task_type do %>
                <% "weekly" -> %>
                  <%= if today_name() in (task.schedule_days || []) do %>
                    Available Today
                  <% else %>
                    Next available: {next_available_day(task.schedule_days)}
                  <% end %>
                <% "one_off" -> %>
                  One time task
              <% end %>
            </:col>
            <:action :let={task}>
              <%= if can_complete_task?(task, @child) do %>
                <.button phx-click="complete_task" phx-value-id={task.id}>
                  Complete
                </.button>
              <% end %>
            </:action>
          </.table>

        <% "rewards" -> %>
          <div class="space-y-8">
            <%= if length(@unfulfilled_rewards) > 0 do %>
              <div>
                <h3 class="text-lg font-medium text-gray-900 mb-4">Pending Rewards</h3>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                  <%= for redeemed_reward <- @unfulfilled_rewards do %>
                    <div class="bg-white shadow rounded-lg overflow-hidden border border-yellow-100">
                      <%= if redeemed_reward.reward.image_url do %>
                        <img src={redeemed_reward.reward.image_url} alt={redeemed_reward.reward.name} class="w-full h-48 object-cover"/>
                      <% end %>
                      <div class="p-4">
                        <div class="flex items-center justify-between mb-2">
                          <h3 class="text-lg font-medium text-gray-900"><%= redeemed_reward.reward.name %></h3>
                          <span class="px-2 py-1 text-xs font-medium rounded-full bg-yellow-100 text-yellow-800">
                            Pending
                          </span>
                        </div>
                        <p class="mt-1 text-sm text-gray-500"><%= redeemed_reward.reward.description %></p>
                        <div class="mt-4 flex items-center justify-between">
                          <span class="text-indigo-600 font-medium"><%= redeemed_reward.reward.points %> points</span>
                          <.button
                            phx-click="cancel_reward"
                            phx-value-id={redeemed_reward.id}
                            class="bg-red-600 hover:bg-red-700"
                          >
                            Cancel
                          </.button>
                        </div>
                      </div>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>

            <div>
              <h3 class="text-lg font-medium text-gray-900 mb-4">Available Rewards</h3>
              <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                <%= for reward <- @rewards do %>
                  <div class="bg-white shadow rounded-lg overflow-hidden">
                    <%= if reward.image_url do %>
                      <img src={reward.image_url} alt={reward.name} class="w-full h-48 object-cover"/>
                    <% end %>
                    <div class="p-4">
                      <h3 class="text-lg font-medium text-gray-900"><%= reward.name %></h3>
                      <p class="mt-1 text-sm text-gray-500"><%= reward.description %></p>
                      <div class="mt-4 flex items-center justify-between">
                        <span class="text-indigo-600 font-medium"><%= reward.points %> points</span>
                        <.button
                          phx-click="redeem_reward"
                          phx-value-id={reward.id}
                          disabled={@child.points < reward.points}
                          class={if @child.points < reward.points, do: "opacity-50 cursor-not-allowed"}
                        >
                          Redeem
                        </.button>
                      </div>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
      <% end %>
    </div>
  </div>
</div>
