<div class="w-full px-4">
  <.header>
    <%= @child.name %>'s Dashboard
    <:subtitle>
      <span class="text-3xl font-bold transition-all duration-300 transform" id="points" phx-hook="Points">
        Current Points: <%= @child.points %>
      </span>
    </:subtitle>
  </.header>

  <div class="mt-8">
    <h2 class="text-xl font-semibold mb-4">Punch Card Tasks</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <%= for task <- Enum.filter(@tasks, & &1.task_type == "punch_card") do %>
        <div 
          class={[
            "bg-white shadow rounded-lg p-4",
            (if task.current_completions >= task.completions_required, do: "bg-green-50 border border-green-100", else: "")
          ]} 
          id={"punch-card-#{task.id}"} 
          data-completions-required={task.completions_required}
        >
          <div class="flex justify-between items-start mb-2">
            <h3 class={[
              "text-lg font-medium",
              (if task.current_completions >= task.completions_required, do: "text-green-900", else: "")
            ]}><%= task.title %></h3>
            <span class={[
              "text-sm font-medium",
              (if task.current_completions >= task.completions_required, do: "text-green-600", else: "text-orange-600")
            ]}><%= task.points %> pts</span>
          </div>
          <p class="text-sm text-gray-600 mb-2"><%= task.description %></p>
          <div class="flex items-center justify-between mb-4">
            <div class="flex gap-2">
              <%= for i <- 1..task.completions_required do %>
                <div class={[
                  "punch-circle w-6 h-6 rounded-full flex items-center justify-center border-2 transition-all duration-200",
                  if i <= task.current_completions do
                    "border-red-400 bg-red-400 text-white"
                  else
                    "border-gray-300"
                  end
                ]}>
                  <%= if i <= task.current_completions do %>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  <% else %>
                    <span class="w-2 h-2 rounded-full bg-gray-300"></span>
                  <% end %>
                </div>
              <% end %>
            </div>
            <div class="text-sm text-gray-500">
              <% completion_count = Tasks.count_punch_card_completions(task.id, @child.id) %>
              <%= if completion_count > 0 do %>
                Completed <%= completion_count %> times!
              <% else %>
                Completed <%= completion_count %> times total
              <% end %>
            </div>
          </div>
          <%= if can_complete_task?(task, @child) do %>
            <.button phx-click="complete_task" phx-value-id={task.id} class="w-full">
              Complete
            </.button>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>

  <div class="mt-8">
    <h2 class="text-xl font-semibold mb-6">Daily Tasks</h2>
    <div class="grid grid-cols-7 xl:grid-cols-8">
      <%= for {day, index} <- Enum.with_index(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]) do %>
        <% date = Date.add(@current_week.start, index)
        is_today = Date.compare(date, Date.utc_today()) == :eq

        full_day =
          case day do
            "Mon" -> "monday"
            "Tue" -> "tuesday"
            "Wed" -> "wednesday"
            "Thu" -> "thursday"
            "Fri" -> "friday"
            "Sat" -> "saturday"
            "Sun" -> "sunday"
          end %>
        <div class={[
          "min-h-[200px] bg-white rounded-lg shadow-md overflow-hidden transition-all",
          if(is_today, do: "xl:col-span-2 xl:row-span-2")
        ]}>
          <div class={[
            "p-4 border-b border-gray-200",
            if(is_today, do: "bg-orange-100", else: "bg-gray-50")
          ]}>
            <h3 class={[
              "font-semibold text-center text-gray-800",
              if(is_today, do: "text-lg", else: "text-base")
            ]}>
              {day}
              <div class="text-sm font-normal text-gray-500 mt-1">
                {Calendar.strftime(date, "%b %d")}
              </div>
            </h3>
          </div>
          <div class="p-3 space-y-3 max-h-[500px] overflow-y-auto">
            <%= for task <- Enum.filter(@tasks, fn task -> 
              task.task_type == "weekly" && 
              full_day in (task.schedule_days || [])
            end) |> Enum.sort_by(&{-&1.points, &1.title}) do %>
              <% 
                task_completed = if Map.has_key?(@task_completions, task.id) do
                  completions = @task_completions[task.id]
                  date_str = if is_binary(date), do: date, else: Date.to_string(date)
                  Enum.any?(completions, fn completion_date -> 
                    comp_str = if is_binary(completion_date), do: completion_date, else: Date.to_string(completion_date)
                    comp_str == date_str
                  end)
                else
                  false
                end

                is_future = Date.compare(date, Date.utc_today()) == :gt
              %>
              <div class={[
                cond do
                  task_completed -> "bg-green-50 rounded-lg p-3 border border-green-100 transition-colors"
                  is_future -> "bg-gray-50/50 rounded-lg p-3 border border-gray-100 transition-colors opacity-95"
                  true -> "bg-gray-50 rounded-lg p-3 border border-gray-200 transition-colors"
                end,
                # Make clickable if either it can be completed OR if it's already completed (for toggling)
                if can_complete_task?(task, @child, date) or task_completed do
                  "cursor-pointer hover:border-gray-300"
                else
                  ""
                end
              ]}
              phx-click={
                cond do
                  task_completed -> "remove_task_completion"
                  can_complete_task?(task, @child, date) -> "complete_task"
                  true -> nil
                end
              }
              phx-value-id={task.id}
              phx-value-date={if is_binary(date), do: date, else: Date.to_string(date)}
              >
                <div class="flex justify-between items-start gap-2">
                  <div>
                    <h4 class={[
                      "font-medium",
                      cond do
                        task_completed -> "text-xs text-green-700"
                        is_future -> "text-xs text-gray-400"
                        true -> "text-xs text-gray-700"
                      end
                    ]}>
                      {task.title}
                    </h4>
                    <span class={[
                      "font-medium whitespace-nowrap text-xs",
                      cond do
                        task_completed -> "text-green-600"
                        is_future -> "text-gray-400"
                        true -> "text-gray-600"
                      end
                    ]}>
                      {task.points} pts
                    </span>
                  </div>

                  <%= if task_completed do %>
                    <div class="rounded-full flex items-center justify-center p-2 text-green-600">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        class="w-5 h-5"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </div>
                  <% else %>
                    <%= if can_complete_task?(task, @child, date) do %>
                      <div class="rounded-full flex items-center justify-center p-2 text-gray-500">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          viewBox="0 0 20 20"
                          fill="none"
                          stroke="currentColor"
                          class="w-5 h-5"
                        >
                          <rect x="3" y="3" width="14" height="14" rx="2" stroke-width="2" />
                        </svg>
                      </div>
                    <% end %>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <div class="mt-8">
    <h2 class="text-xl font-semibold mb-4">Other Tasks</h2>
    <.table id="other-tasks" rows={Enum.filter(@tasks, &(&1.task_type == "one_off"))}>
      <:col :let={task} label="Title">{task.title}</:col>
      <:col :let={task} label="Description">{task.description}</:col>
      <:col :let={task} label="Points">{task.points} pts</:col>
      <:col :let={task} label="Status">
        <%= case task.task_type do %>
          <% "weekly" -> %>
            <%= if today_name() in (task.schedule_days || []) do %>
              Available Today
            <% else %>
              Next available: {next_available_day(task.schedule_days)}
            <% end %>
          <% "one_off" -> %>
            One time task
        <% end %>
      </:col>
      <:action :let={task}>
        <%= if can_complete_task?(task, @child) do %>
          <.button phx-click="complete_task" phx-value-id={task.id}>
            Complete
          </.button>
        <% end %>
      </:action>
    </.table>
  </div>
</div>
